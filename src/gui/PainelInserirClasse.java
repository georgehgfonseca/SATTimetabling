package gui;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import java.net.URL;
import java.util.ArrayList;


import org.prevayler.Prevayler;
import org.prevayler.TransactionWithQuery;

import de.preclipse.bo.*;



public class PainelInserirClasse extends JPanel {

	private static final long serialVersionUID = 1L;

	public PainelInserirClasse(Prevayler prevayler) {
		this.prevayler = prevayler;
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		docenteItens = getDocenteItens();		
		cursoItens = getCursoItens();

		boxCurso = new JComboBox(cursoItens.toArray());
		boxCurso.setMaximumRowCount(cursoItens.size());

		boxDocente = new JComboBox(docenteItens.toArray());
		boxDocente.setMaximumRowCount(docenteItens.size());

		jPanel1 = new javax.swing.JPanel();
		labelTitulo = new javax.swing.JLabel();
		labelCodigo = new javax.swing.JLabel();
		labelNome = new javax.swing.JLabel();
		fieldCodigo = new javax.swing.JTextField();
		fieldNome = new javax.swing.JTextField();
		labelCurso = new javax.swing.JLabel();

		String pathFigure = "/gui/imagens/ajuda.png";
		URL url = this.getClass().getResource(pathFigure);
		Icon icone = new ImageIcon(url);
		buttonHelp = new JButton("",icone);
		buttonHelp.setContentAreaFilled(false);
		buttonHelp.setBorderPainted(false);

		buttonInserir = new javax.swing.JButton();
		buttonLimpar = new javax.swing.JButton();
		labelLogo = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();
		fieldCargaHoraria = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		fieldMinAulasGeminadas = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		fieldLimDiarioAulas = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		fieldNumAlunos = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();

		jPanel1.setPreferredSize(new java.awt.Dimension(531, 544));

		labelTitulo.setFont(new java.awt.Font("Dialog", 0, 24));
		labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		labelTitulo.setText("Inserir Classe");

		labelCodigo.setText("Codigo");

		labelNome.setText("Nome");

		labelCurso.setText("Curso");

		buttonHelp.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonHelpActionPerformed(evt);
			}
		});

		buttonInserir.setText("Inserir");
		buttonInserir.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonInserirActionPerformed(evt);
			}
		});

		buttonLimpar.setText("Limpar");
		buttonLimpar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonLimparActionPerformed(evt);
			}
		});

		jLabel1.setText("Carga Horária");

		jLabel2.setText("Mínimo de Aulas Geminadas");

		jLabel3.setText("Limite Diário de Aulas");

		jLabel4.setText("Número de Alunos");

		jLabel5.setText("Docente Responsável");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
										.addComponent(labelLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
										.addGap(29, 29, 29)
										.addComponent(buttonInserir)
										.addGap(18, 18, 18)
										.addComponent(buttonLimpar)
										.addGap(105, 105, 105)
										.addComponent(buttonHelp))
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
												.addGap(106, 106, 106)
												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(labelCodigo)
														.addComponent(labelNome)
														.addComponent(labelCurso)
														.addComponent(jLabel1)
														.addComponent(jLabel2)
														.addComponent(jLabel3)
														.addComponent(jLabel4)
														.addComponent(jLabel5))
														.addGap(18, 18, 18)
														.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(boxDocente, 0, 266, Short.MAX_VALUE)
																.addComponent(fieldNumAlunos, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
																.addComponent(fieldLimDiarioAulas, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
																.addComponent(fieldMinAulasGeminadas, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
																.addComponent(fieldCargaHoraria, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
																.addComponent(boxCurso, javax.swing.GroupLayout.Alignment.TRAILING, 0, 266, Short.MAX_VALUE)
																.addComponent(fieldNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
																.addComponent(fieldCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))))
																.addContainerGap())
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																		.addContainerGap(212, Short.MAX_VALUE)
																		.addComponent(labelTitulo)
																		.addGap(173, 173, 173))
		);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(labelTitulo)
						.addGap(62, 62, 62)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addComponent(fieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(labelNome))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(boxCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(labelCurso)))
														.addComponent(labelCodigo))
														.addGap(18, 18, 18)
														.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(jLabel1)
																.addComponent(fieldCargaHoraria, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(18, 18, 18)
																.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																		.addComponent(jLabel2)
																		.addComponent(fieldMinAulasGeminadas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addGap(18, 18, 18)
																		.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(jLabel3)
																				.addComponent(fieldLimDiarioAulas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGap(18, 18, 18)
																				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																						.addComponent(jLabel4)
																						.addComponent(fieldNumAlunos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
																						.addGap(18, 18, 18)
																						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																								.addComponent(jLabel5)
																								.addComponent(boxDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
																								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
																								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
																														.addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(labelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
																														.addContainerGap())
																														.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																																.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																																		.addComponent(buttonInserir)
																																		.addComponent(buttonLimpar))
																																		.addGap(36, 36, 36))))
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 531, Short.MAX_VALUE)
				.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 544, Short.MAX_VALUE)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
        fieldCodigo.setEditable(false);
        fieldCodigo.setText("" + ((PrevalentSystem)prevayler.prevalentSystem()).getNextClasseID());
	}// </editor-fold>

	private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {
		JanelaAjuda ajuda = new JanelaAjuda("Ajuda - Operação Inserir Classe", 
        		"-------------------------------------------------------------------------------------\n" +
        		"                             Operação Inserir Classe                                 \n" +
        		"-------------------------------------------------------------------------------------\n" +
        		"1. Insira o código da classe. O código é o identificador único de cada classe.       \n" +
        		"2. Preencha os outros dados da classe: nome, curso, carga horária, mínimo de aulas   \n" +
        		"   geminadas, limite diário de aulas, número de alunos e o docente responsável.      \n" +
        		"3. Marque o turno no qual o curso ocorre. O sistema permite apenas dois turnos.      \n" +
        		"-------------------------------------------------------------------------------------\n" +
        		"Obs.: Apenas o campo nome pode ser omitido.                                          \n" +
        		"Obs.: Os campos Carga Horária, Mínimo de Aulas Geminadas, Limite Diário de Aulas e   \n" +
        		"      Número de Alunos devem ser preenchidos com números inteiros não negativos.     \n" +
        		"      O valor Mínimo de Aulas Geminadas deve ser no máximo a metade da Carga Horária \n" +
        		"      da classe; caso contrário, leva a um horário impossível de gerar.              \n" +
        		"      Caso o Mínimo de Aulas Geminadas seja maior que 0, o limite diário de aulas de-\n" +
        		"      ve ser no mínimo 2 aulas.                                                      \n" +
        		"      O limite diário de aulas não pode exceder a 5 aulas.                           \n" +
        		"      Caso deseje omitir o mínimo de aulas geminadas, preencha o campo relacionado   \n" +
        		"      com 0.                                                                         \n" +
        		"      Caso deseje omitir o lim. diário de aulas, preencha o campo relacionado com 5. \n" +
        		"      O campo número de alunos é útil somente caso deseje efetuar a alocação de salas\n" +
        		"      . Caso contrário, pode-se omití-lo inserindo o valor 0.                        \n" +
        		"-------------------------------------------------------------------------------------\n");
        ajuda.setVisible(true);
	}

	private void buttonInserirActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			if(validaEntrada()) {			
				Classe temp = (Classe) prevayler.execute(new ClasseConsultaPorCodigoTransaction(Integer.parseInt(fieldCodigo.getText().trim())));
				if(temp == null) {
					prevayler.execute(makeCreateClassTransaction());
					informationMessage("Classe cadastrada com sucesso.");
					buttonLimparActionPerformed(evt);
				}
				else {
					JOptionPane.showMessageDialog(PainelInserirClasse.this, "Já existe classe com esse código!", "Atenção", JOptionPane.WARNING_MESSAGE);
					buttonLimparActionPerformed(evt);
				}
			}			
		}
		catch(NumberFormatException exception) {
			errorMessage("Deve ser informado valores inteiros para código, carga horária, \nmínimo de aulas geminadas, limite diário de aulas e número de alunos.");
		}
		catch(Exception exception) {
			errorMessage("Erro ao inserir a classe.");
		}
	}

	private boolean validaEntrada() throws NumberFormatException {
		if(Integer.parseInt(fieldCodigo.getText().trim()) < 0) {
			errorMessage("O código da classe não pode ser negativo.");
			return false;
		}
		if((((String) boxDocente.getSelectedItem())).equals("Selecione")) {
			errorMessage("Deve-se selecionar o docente responsável pela classe.");
			return false;
		}
		if((((String) boxCurso.getSelectedItem())).equals("Selecione")) {
			errorMessage("Deve-se selecionar o curso ao qual a classe pertence.");
			return false;
		}
		if(Integer.parseInt(fieldCargaHoraria.getText().trim()) > 25 || Integer.parseInt(fieldCargaHoraria.getText().trim()) < 1) {
			errorMessage("A carga horária da classe deve ser no mínimo 1 e no máximo 25 horas-aula.");
			return false;
		}
		if(Integer.parseInt(fieldCargaHoraria.getText().trim()) < 2 * Integer.parseInt(fieldMinAulasGeminadas.getText().trim())) {
			errorMessage("O número mínimo de aulas geminadas deve ser no máximo igual à metade da carga horária.");
			return false;
		}
		if(Integer.parseInt(fieldLimDiarioAulas.getText().trim()) > 5 || Integer.parseInt(fieldLimDiarioAulas.getText().trim()) < 0) {
			errorMessage("O limite diário de aulas não pode ser negativo, nem maior que 5.");
			return false;
		}
		if(Integer.parseInt(fieldLimDiarioAulas.getText().trim()) < 2 && Integer.parseInt(fieldMinAulasGeminadas.getText().trim()) > 0) {
			errorMessage("É impossível haver aulas geminadas com o limite diário de aulas menor que 2.");
			return false;
		}
		if(Integer.parseInt(fieldNumAlunos.getText().trim()) < 0) {
			errorMessage("O número de alunos não pode ser negativo.");
			return false;
		}
		if(Integer.parseInt(fieldMinAulasGeminadas.getText().trim()) < 0) {
			errorMessage("O mínimo de aulas geminadas não pode ser negativo.");
			return false;
		}
		return true;
	}

	private void buttonLimparActionPerformed(java.awt.event.ActionEvent evt) {
		fieldCodigo.setText("" + ((PrevalentSystem)prevayler.prevalentSystem()).getNextClasseID());
		fieldNome.setText("");
		boxCurso.setSelectedIndex(0);
		fieldCargaHoraria.setText("");
		fieldMinAulasGeminadas.setText("");
		fieldLimDiarioAulas.setText("");
		fieldNumAlunos.setText("");
		boxDocente.setSelectedIndex(0);
	}


	// Variables declaration - do not modify
	private javax.swing.JComboBox boxCurso;
	private javax.swing.JComboBox boxDocente;
	private javax.swing.JButton buttonHelp;
	private javax.swing.JButton buttonInserir;
	private javax.swing.JButton buttonLimpar;
	private javax.swing.JTextField fieldCargaHoraria;
	private javax.swing.JTextField fieldCodigo;
	private javax.swing.JTextField fieldLimDiarioAulas;
	private javax.swing.JTextField fieldMinAulasGeminadas;
	private javax.swing.JTextField fieldNome;
	private javax.swing.JTextField fieldNumAlunos;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JLabel labelCodigo;
	private javax.swing.JLabel labelCurso;
	private javax.swing.JLabel labelLogo;
	private javax.swing.JLabel labelNome;
	private javax.swing.JLabel labelTitulo;
	// End of variables declaration

	private Prevayler prevayler;
	private ArrayList<String> docenteItens;
	private ArrayList<String> cursoItens;

	private TransactionWithQuery makeCreateClassTransaction() {
		return (TransactionWithQuery) new ClasseCreateTransaction(Integer.parseInt(fieldCodigo.getText().trim()),
				fieldNome.getText().trim(),
				Integer.parseInt(boxCurso.getSelectedItem().toString().substring(0, boxCurso.getSelectedItem().toString().indexOf(" - "))),
				Integer.parseInt(fieldCargaHoraria.getText().trim()),
				Integer.parseInt(fieldMinAulasGeminadas.getText().trim()),
				Integer.parseInt(fieldLimDiarioAulas.getText().trim()),
				Integer.parseInt(fieldNumAlunos.getText().trim()),
				boxDocente.getSelectedItem().toString().substring(0, boxDocente.getSelectedItem().toString().indexOf(" - ")),
				new ArrayList<Restricao>());
	}

	public ArrayList<String> getDocenteItens() {
		ArrayList<String> listSiapes = new ArrayList<String>();
		ArrayList<Docente> list = ((ArrayList<Docente>)((PrevalentSystem)prevayler.prevalentSystem()).getDocente());
		int i = 0;
		listSiapes.add("Selecione");
		if(list != null) {
			while(i < list.size()) {
				listSiapes.add("" + list.get(i).getSiape() + " - " + list.get(i).getNome());
				++i;
			}
		}
		return listSiapes;
	}

	public ArrayList<String> getCursoItens() {
		ArrayList<String> listCursos = new ArrayList<String>();
		ArrayList<Curso> list = ((ArrayList<Curso>)((PrevalentSystem)prevayler.prevalentSystem()).getCurso());
		int i = 0;
		listCursos.add("Selecione");
		if(list != null) {
			while(i < list.size()) {
				listCursos.add("" + list.get(i).getCodigo() + " - " + list.get(i).getNome());
				++i;
			}
		}
		return listCursos;
	}

	private void errorMessage(String s) {
		message(s, "Erro!", JOptionPane.ERROR_MESSAGE);
	}

	private void informationMessage(String s) {
		message(s, "Ok!", JOptionPane.INFORMATION_MESSAGE);
	}

	private void message(String s, String title, int type) {
		JOptionPane.showMessageDialog(PainelInserirClasse.this, s, title, type);
	}

}