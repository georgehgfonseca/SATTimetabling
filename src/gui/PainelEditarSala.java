package gui;

import java.net.URL;
import java.util.ArrayList;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import org.prevayler.Prevayler;
import org.prevayler.TransactionWithQuery;

import de.preclipse.bo.PrevalentSystem;
import de.preclipse.bo.Sala;
import de.preclipse.bo.SalaChangeTransaction;
import de.preclipse.bo.SalaConsultaPorCodigoTransaction;
import de.preclipse.bo.SalaRemoveTransaction;

public class PainelEditarSala extends JPanel {

	private static final long serialVersionUID = 1L;

	public PainelEditarSala(Prevayler prevayler) {
		this.prevayler = prevayler;
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		labelTitulo = new javax.swing.JLabel();
		labelCodigo = new javax.swing.JLabel();
		labelNome = new javax.swing.JLabel();
		fieldCodigo = new javax.swing.JTextField();
		fieldNome = new javax.swing.JTextField();
		labelRestricoes = new javax.swing.JLabel();

		String pathFigure = "/gui/imagens/ajuda.png";
		URL url = this.getClass().getResource(pathFigure);
		Icon icone = new ImageIcon(url);
		buttonHelp = new JButton("",icone);
		buttonHelp.setContentAreaFilled(false);
		buttonHelp.setBorderPainted(false);

		buttonAlterar = new javax.swing.JButton();
		buttonRemover = new javax.swing.JButton();
		labelSelecione = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		tableListSalas = new javax.swing.JTable();
		buttonSelecionar = new javax.swing.JButton();
		fieldCapacidade = new javax.swing.JTextField();

		labelTitulo.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
		labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		labelTitulo.setText("Editar Sala");

		labelCodigo.setText("Codigo");

		labelNome.setText("Nome");

		labelRestricoes.setText("Capacidade");

		buttonHelp.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonHelpActionPerformed(evt);
			}
		});

		buttonAlterar.setText("Alterar");
		buttonAlterar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonAlterarActionPerformed(evt);
			}
		});

		buttonRemover.setText("Remover");
		buttonRemover.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonRemoverActionPerformed(evt);
			}
		});

		labelSelecione.setText("Selecione");

		tableListSalas.setModel(new javax.swing.table.DefaultTableModel(
				new Object [][] {
						{null, null, null},
						{null, null, null},
						{null, null, null},
						{null, null, null},
						{null, null, null},
						{null, null, null}
				},
				new String [] {
						"Código", "Nome", "Capacidade"
				}
		) {
			private static final long serialVersionUID = 1L;
			Class[] types = new Class [] {
					java.lang.String.class, java.lang.String.class, java.lang.String.class
			};
			boolean[] canEdit = new boolean [] {
					false, false, false
			};

			public Class getColumnClass(int columnIndex) {
				return types [columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit [columnIndex];
			}
		});
		jScrollPane2.setViewportView(tableListSalas);

		buttonSelecionar.setText("Selecionar");
		buttonSelecionar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonSelecionarActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addContainerGap()
										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
														.addGap(213, 213, 213)
														.addComponent(buttonSelecionar)
														.addGap(218, 218, 218))
														.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)))
														.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																.addGap(173, 173, 173)
																.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
																						.addComponent(labelRestricoes)
																						.addComponent(labelNome)
																						.addComponent(labelCodigo))
																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																								.addComponent(fieldCapacidade)
																								.addComponent(fieldNome)
																								.addComponent(fieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
																								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																										.addComponent(buttonAlterar)
																										.addGap(18, 18, 18)
																										.addComponent(buttonRemover)
																										.addGap(174, 174, 174))))
																										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																												.addContainerGap(461, Short.MAX_VALUE)
																												.addComponent(buttonHelp))
																												.addGroup(jPanel1Layout.createSequentialGroup()
																														.addGap(206, 206, 206)
																														.addComponent(labelTitulo))
																														.addGroup(jPanel1Layout.createSequentialGroup()
																																.addGap(243, 243, 243)
																																.addComponent(labelSelecione)))
																																.addContainerGap())
		);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(labelTitulo)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(labelSelecione)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(buttonSelecionar)
						.addGap(35, 35, 35)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(fieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(labelCodigo))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(labelNome))
										.addGap(18, 18, 18)
										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(fieldCapacidade, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(labelRestricoes))
												.addGap(38, 38, 38)
												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(buttonAlterar)
														.addComponent(buttonRemover))
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
														.addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addContainerGap())
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		setTableSalas();
		fieldCodigo.setEditable(false);
	}// </editor-fold>

	private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {
		JanelaAjuda ajuda = new JanelaAjuda("Ajuda - Operação Editar Sala", 
        		"-------------------------------------------------------------------------------------\n" +
        		"                               Operação Editar Sala                                  \n" +
        		"-------------------------------------------------------------------------------------\n" +
        		"1. Selecione um dos registros de sala na tabela na parte superior do painel.         \n" +
        		"2. Clique no botão selecionar e irão ser exibidas as informações da sala.            \n" +
        		"3. Edite o nome e/ou a capacidade da sala, caso deseje alterar o registro.           \n" +
        		"4. Clique no botão alterar ou no botão remover para finalizar a operação.            \n" +
        		"-------------------------------------------------------------------------------------\n");
        ajuda.setVisible(true);
	}

	private void buttonAlterarActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			if(validaEntrada()) {
				prevayler.execute(makeSalaChangeTransaction());
				informationMessage("Sala alterada com sucesso.");
				setTableSalas();
				cleanScreen();
			}
		} 
		catch(NumberFormatException exception) {
			errorMessage("Deve ser informado um valor inteiro para a capacidade.");
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void buttonRemoverActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			prevayler.execute(makeSalaRemoveTransaction());
			informationMessage("Sala removida com sucesso.");
			setTableSalas();
			cleanScreen();
		} 
		catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void buttonSelecionarActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			Sala temp = (Sala) prevayler.execute(new SalaConsultaPorCodigoTransaction(getSelectedCodigo()));
			if(temp == null)
				JOptionPane.showMessageDialog(PainelEditarSala.this, "O código informado não existe!", "Atenção", JOptionPane.WARNING_MESSAGE);
			else {
				fieldCodigo.setText("" + temp.getCodigo());
				fieldNome.setText(temp.getNome());
				fieldCapacidade.setText("" + temp.getCapacidade());
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}


	// Variables declaration - do not modify
	private javax.swing.JButton buttonAlterar;
	private javax.swing.JButton buttonHelp;
	private javax.swing.JButton buttonRemover;
	private javax.swing.JButton buttonSelecionar;
	private javax.swing.JTextField fieldCapacidade;
	private javax.swing.JTextField fieldCodigo;
	private javax.swing.JTextField fieldNome;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JLabel labelCodigo;
	private javax.swing.JLabel labelNome;
	private javax.swing.JLabel labelRestricoes;
	private javax.swing.JLabel labelSelecione;
	private javax.swing.JLabel labelTitulo;
	private javax.swing.JTable tableListSalas;
	// End of variables declaration

	private Prevayler prevayler;

	private boolean validaEntrada() throws NumberFormatException {
		if(Integer.parseInt(fieldCapacidade.getText().trim()) < 0) {
			errorMessage("A capacidade não pode ser negativa.");
			return false;
		}
		return true;
	}

	private void setTableSalas() {
		for(int i = 0; i < ((DefaultTableModel) tableListSalas.getModel()).getRowCount();) {
			((DefaultTableModel) tableListSalas.getModel()).removeRow(i);
		}
		String[]lin = new String[3];
		ArrayList<Sala> salas = ((ArrayList<Sala>)((PrevalentSystem)prevayler.prevalentSystem()).getSala());			
		for(int i = 0; i < salas.size(); ++i) {
			try {
				lin[0]= "" + salas.get(i).getCodigo();
				lin[1]= "" + salas.get(i).getNome();
				lin[2]= "" + salas.get(i).getCapacidade();
				((DefaultTableModel) tableListSalas.getModel()).addRow(lin);
			}
			catch(Exception e) {
				e.printStackTrace();
			}
		}
	}

	private int getSelectedCodigo() {
		return Integer.parseInt((String) tableListSalas.getModel().getValueAt(tableListSalas.getSelectedRow(), 0));
	}

	public TransactionWithQuery makeSalaChangeTransaction() {
		return (TransactionWithQuery) new SalaChangeTransaction(Integer.parseInt(fieldCodigo.getText().trim()),
				fieldNome.getText().trim(),
				Integer.parseInt(fieldCapacidade.getText().trim()));
	}

	public TransactionWithQuery makeSalaRemoveTransaction() {
		return (TransactionWithQuery) new SalaRemoveTransaction(Integer.parseInt(fieldCodigo.getText().trim()));
	}

	public void cleanScreen() {
		fieldCodigo.setText("");
		fieldNome.setText("");
		fieldCapacidade.setText("");
	}

	private void informationMessage(String s) {
		message(s, "Ok!", JOptionPane.INFORMATION_MESSAGE);
	}

	private void message(String s, String title, int type) {
		JOptionPane.showMessageDialog(PainelEditarSala.this, s, title, type);
	}

	private void errorMessage(String s) {
		message(s, "Erro!", JOptionPane.ERROR_MESSAGE);
	}

}
