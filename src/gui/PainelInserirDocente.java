package gui;

import javax.swing.*;

import java.net.URL;
import java.util.ArrayList;


import org.prevayler.Prevayler;
import org.prevayler.TransactionWithQuery;

import de.preclipse.bo.*;



public class PainelInserirDocente extends JPanel {

	private static final long serialVersionUID = 1L;
	/** Creates new form InserirClasse */
    public PainelInserirDocente(Prevayler prevayler) {
    	this.prevayler = prevayler;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelTitulo = new javax.swing.JLabel();
        labelCodigo = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        fieldCodigo = new javax.swing.JTextField();
        fieldNome = new javax.swing.JTextField();
        labelRestricoes = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRestricoes = new TabelaRestricoes();
        
        String pathFigure = "/gui/imagens/ajuda.png";
		URL url = this.getClass().getResource(pathFigure);
		Icon icone = new ImageIcon(url);
		buttonHelp = new JButton("",icone);
		buttonHelp.setContentAreaFilled(false);
		buttonHelp.setBorderPainted(false);
		
        buttonInserir = new javax.swing.JButton();
        buttonLimpar = new javax.swing.JButton();
        labelLogo = new javax.swing.JLabel();

        labelTitulo.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitulo.setText("Inserir Docente");

        labelCodigo.setText("Codigo");

        labelNome.setText("Nome");

        labelRestricoes.setText("Restrições de Horário");

        jScrollPane1.setViewportView(tableRestricoes);

        buttonHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHelpActionPerformed(evt);
            }
        });

        buttonInserir.setText("Inserir");
        buttonInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInserirActionPerformed(evt);
            }
        });

        buttonLimpar.setText("Limpar");
        buttonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(labelTitulo)
                        .addGap(165, 165, 165))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelNome)
                            .addComponent(labelCodigo)
                            .addComponent(labelRestricoes))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fieldCodigo)
                            .addComponent(fieldNome, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(buttonInserir)
                        .addGap(18, 18, 18)
                        .addComponent(buttonLimpar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonHelp)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNome))
                .addGap(11, 11, 11)
                .addComponent(labelRestricoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonInserir)
                    .addComponent(buttonLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 691, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fieldCodigo.setEditable(false);
        fieldCodigo.setText("" + ((PrevalentSystem)prevayler.prevalentSystem()).getNextDocenteID());
    }// </editor-fold>

    private void buttonInserirActionPerformed(java.awt.event.ActionEvent evt) {
    	try {
			Docente temp = (Docente) prevayler.execute(new DocenteConsultaPorSiapeTransaction(Integer.parseInt(fieldCodigo.getText().trim())));
			if(temp == null) {
				prevayler.execute(makeCreateDocenteTransaction());
				informationMessage("Docente cadastrado com sucesso.");
				buttonLimparActionPerformed(evt);
			}
			else {
				JOptionPane.showMessageDialog(PainelInserirDocente.this, "Já existe docente com esse código!", "Atenção", JOptionPane.WARNING_MESSAGE);
				buttonLimparActionPerformed(evt);
			}
		}
		catch(Exception exception) {
			exception.printStackTrace();
		}
    }

    private void buttonLimparActionPerformed(java.awt.event.ActionEvent evt) {
        fieldCodigo.setText("" + ((PrevalentSystem)prevayler.prevalentSystem()).getNextDocenteID());
		fieldNome.setText("");
		cleanTabelaRestricoes();
    }

    private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {
        JanelaAjuda ajuda = new JanelaAjuda("Ajuda - Operação Inserir Docente", 
        		"-------------------------------------------------------------------------------------\n" +
        		"                             Operação Inserir Docente                                \n" +
        		"-------------------------------------------------------------------------------------\n" +
        		"1. O número do campo código será o identificador do docente.                         \n" +
        		"2. Insira o nome do docente. É recomendável que o nome não seja repetido.            \n" +
        		"3. Marque na tabela restrições de horário os horários em que o professor está indis- \n" +
        		"   ponível.                                                                          \n" +
        		"-------------------------------------------------------------------------------------\n" +
        		"Obs.: Marcar um número excessivo de restrições pode levar a um horário impossível de \n" +
        		"      gerar.                                                                         \n" +
        		"-------------------------------------------------------------------------------------\n");
        ajuda.setVisible(true);
    }


    // Variables declaration - do not modify
    private javax.swing.JButton buttonHelp;
    private javax.swing.JButton buttonInserir;
    private javax.swing.JButton buttonLimpar;
    private javax.swing.JTextField fieldCodigo;
    private javax.swing.JTextField fieldNome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel labelLogo;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelRestricoes;
    private javax.swing.JLabel labelTitulo;
    private TabelaRestricoes tableRestricoes;
    
    private Prevayler prevayler;
    // End of variables declaration
    
    private TransactionWithQuery makeCreateDocenteTransaction() throws Exception {
		return (TransactionWithQuery) new DocenteCreateTransaction(Integer.parseInt(fieldCodigo.getText().trim()),
				fieldNome.getText().trim(),
				getRestricoesFromTable());
	}

	private ArrayList<Restricao> getRestricoesFromTable() {
		final int LINES = 10;
		final int COLS = 6;
		ArrayList<Restricao> restricoes = new ArrayList<Restricao>();
		for(int i = 0; i < LINES; i++) {
			for(int j = 1; j < COLS; j++){
				if(((Boolean) tableRestricoes.getModel().getValueAt(i, j)).booleanValue()) {
					restricoes.add(new Restricao(j + 1, i));
				}
			}
		}
		return restricoes;
	}

	public void cleanTabelaRestricoes() {
		final int LINES = 10;
		final int COLS = 6;
		for(int i = 0; i < LINES; i++) {
			for(int j = 1; j < COLS; j++){
				tableRestricoes.getModel().setValueAt(false, i, j);
			}
		}
	}

	private void informationMessage(String s) {
		message(s, "Ok!", JOptionPane.INFORMATION_MESSAGE);
	}

	private void message(String s, String title, int type) {
		JOptionPane.showMessageDialog(PainelInserirDocente.this, s, title, type);
	}

}