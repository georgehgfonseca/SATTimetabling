package gui;

import java.net.URL;
import java.util.ArrayList;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.prevayler.Prevayler;
import org.prevayler.TransactionWithQuery;

import de.preclipse.bo.*;

public class PainelEditarCurso extends javax.swing.JPanel {

	private static final long serialVersionUID = 1L;

	/** Creates new form PainelEditarCurso */
	public PainelEditarCurso(Prevayler prevayler) {
		this.prevayler = prevayler;
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		buttonGroup1 = new javax.swing.ButtonGroup();
		jPanel1 = new javax.swing.JPanel();
		labelTitulo = new javax.swing.JLabel();
		labelCodigo = new javax.swing.JLabel();
		labelNome = new javax.swing.JLabel();
		fieldCodigo = new javax.swing.JTextField();
		fieldNome = new javax.swing.JTextField();
		labelRestricoes = new javax.swing.JLabel();

		String pathFigure = "/gui/imagens/ajuda.png";
		URL url = this.getClass().getResource(pathFigure);
		Icon icone = new ImageIcon(url);
		buttonHelp = new JButton("",icone);
		buttonHelp.setContentAreaFilled(false);
		buttonHelp.setBorderPainted(false);
		
		buttonAlterar = new javax.swing.JButton();
		buttonRemover = new javax.swing.JButton();
		labelSelecione = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		tableListCursos = new javax.swing.JTable();
		buttonSelecionar = new javax.swing.JButton();
		radioTurno1 = new javax.swing.JRadioButton();
		radioTurno2 = new javax.swing.JRadioButton();

		labelTitulo.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
		labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		labelTitulo.setText("Editar Curso");

		labelCodigo.setText("Codigo");

		labelNome.setText("Nome");

		labelRestricoes.setText("Turno");

		buttonHelp.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonHelpActionPerformed(evt);
			}
		});

		buttonAlterar.setText("Alterar");
		buttonAlterar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonAlterarActionPerformed(evt);
			}
		});

		buttonRemover.setText("Remover");
		buttonRemover.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonRemoverActionPerformed(evt);
			}
		});

		labelSelecione.setText("Selecione");

		tableListCursos.setModel(new javax.swing.table.DefaultTableModel(
				new Object [][] {
						{null, null, null},
						{null, null, null},
						{null, null, null},
						{null, null, null},
						{null, null, null},
						{null, null, null}
				},
				new String [] {
						"Código", "Nome", "Turno"
				}
		) {
			private static final long serialVersionUID = 1L;
			Class[] types = new Class [] {
					java.lang.String.class, java.lang.String.class, java.lang.String.class
			};
			boolean[] canEdit = new boolean [] {
					false, false, false
			};

			public Class getColumnClass(int columnIndex) {
				return types [columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit [columnIndex];
			}
		});
		jScrollPane2.setViewportView(tableListCursos);

		buttonSelecionar.setText("Selecionar");
		buttonSelecionar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonSelecionarActionPerformed(evt);
			}
		});

		buttonGroup1.add(radioTurno1);
		radioTurno1.setText("1");

		buttonGroup1.add(radioTurno2);
		radioTurno2.setText("2");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
						.addContainerGap(220, Short.MAX_VALUE)
						.addComponent(buttonSelecionar)
						.addGap(228, 228, 228))
						.addGroup(jPanel1Layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
								.addContainerGap())
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addGap(239, 239, 239)
										.addComponent(labelSelecione)
										.addContainerGap(247, Short.MAX_VALUE))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addGap(198, 198, 198)
												.addComponent(labelTitulo)
												.addContainerGap(199, Short.MAX_VALUE))
												.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
														.addContainerGap(203, Short.MAX_VALUE)
														.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
																.addComponent(labelNome)
																.addComponent(labelCodigo)
																.addComponent(labelRestricoes))
																.addGap(18, 18, 18)
																.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
																				.addComponent(fieldNome)
																				.addComponent(fieldCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
																				.addGroup(jPanel1Layout.createSequentialGroup()
																						.addComponent(radioTurno1)
																						.addGap(18, 18, 18)
																						.addComponent(radioTurno2)))
																						.addContainerGap())
																						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																								.addContainerGap(185, Short.MAX_VALUE)
																								.addComponent(buttonAlterar)
																								.addGap(18, 18, 18)
																								.addComponent(buttonRemover)
																								.addGap(184, 184, 184))
																								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
																										.addContainerGap(458, Short.MAX_VALUE)
																										.addComponent(buttonHelp)
																										.addContainerGap())
		);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGap(25, 25, 25)
						.addComponent(labelTitulo)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(labelSelecione)
						.addGap(11, 11, 11)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(buttonSelecionar)
						.addGap(33, 33, 33)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(fieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(labelCodigo))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(fieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(labelNome))
										.addGap(18, 18, 18)
										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(labelRestricoes)
												.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(radioTurno1)
														.addComponent(radioTurno2)))
														.addGap(29, 29, 29)
														.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(buttonAlterar)
																.addComponent(buttonRemover))
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
																.addComponent(buttonHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
		);
		setTableCursos();
		fieldCodigo.setEditable(false);
	}// </editor-fold>

	private void buttonHelpActionPerformed(java.awt.event.ActionEvent evt) {
		JanelaAjuda ajuda = new JanelaAjuda("Ajuda - Operação Editar Curso", 
        		"-------------------------------------------------------------------------------------\n" +
        		"                              Operação Editar Docente                                \n" +
        		"-------------------------------------------------------------------------------------\n" +
        		"1. Selecione um dos registros de curso na tabela na parte superior do painel.        \n" +
        		"2. Clique no botão selecionar e irão ser exibidas as informações do curso.           \n" +
        		"3. Edite o nome ou o turno do curso caso deseje alterar o registro.                  \n" +
        		"4. Clique no botão alterar ou no botão remover para finalizar a operação.            \n" +
        		"-------------------------------------------------------------------------------------\n" +
        		"Obs.: Antes de remover um curso, verifique se não há alguma classe pertencente ao    \n" +
        		"      mesmo.                                                                         \n" +
        		"      Ao alterar o turno, todas as classes pertencentes ao curso terão o turno alte- \n" +
        		"      rado.                                                                          \n" +
        		"-------------------------------------------------------------------------------------\n");
        ajuda.setVisible(true);
	}

	private void buttonAlterarActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			prevayler.execute(makeCursoChargeTransaction());
			informationMessage("Curso alterado com sucesso.");
			setTableCursos();
			cleanScreen();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void buttonRemoverActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			prevayler.execute(makeCursoRemoveTransaction());
			informationMessage("Curso removido com sucesso.");
			setTableCursos();
			cleanScreen();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void buttonSelecionarActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			Curso temp = (Curso) prevayler.execute(new CursoConsultaPorCodigoTransaction(getSelectedCodigo()));
			if(temp == null)
				JOptionPane.showMessageDialog(PainelEditarCurso.this, "O código informado não existe!", "Atenção", JOptionPane.WARNING_MESSAGE);
			else {
				fieldCodigo.setText("" + temp.getCodigo());
				fieldNome.setText(temp.getNome());
				if(temp.getTurno() == 1) {
					radioTurno1.setSelected(true);
				}
				else {
					radioTurno2.setSelected(true);
				}

			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}


	// Variables declaration - do not modify
	private javax.swing.JButton buttonAlterar;
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JButton buttonHelp;
	private javax.swing.JButton buttonRemover;
	private javax.swing.JButton buttonSelecionar;
	private javax.swing.JTextField fieldCodigo;
	private javax.swing.JTextField fieldNome;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JRadioButton radioTurno1;
	private javax.swing.JRadioButton radioTurno2;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JLabel labelCodigo;
	private javax.swing.JLabel labelNome;
	private javax.swing.JLabel labelRestricoes;
	private javax.swing.JLabel labelSelecione;
	private javax.swing.JLabel labelTitulo;
	private javax.swing.JTable tableListCursos;
	// End of variables declaration

	private Prevayler prevayler;

	private void setTableCursos() {
		for(int i = 0; i < ((DefaultTableModel) tableListCursos.getModel()).getRowCount();) {
			((DefaultTableModel) tableListCursos.getModel()).removeRow(i);
		}
		String[]lin = new String[3];
		ArrayList<Curso> cursos = ((ArrayList<Curso>)((PrevalentSystem)prevayler.prevalentSystem()).getCurso());			
		for(int i = 0; i < cursos.size(); ++i) {
			try {
				lin[0]= "" + cursos.get(i).getCodigo();
				lin[1]= "" + cursos.get(i).getNome();
				lin[2]= "" + cursos.get(i).getTurno();
				((DefaultTableModel) tableListCursos.getModel()).addRow(lin);
			}
			catch(Exception e) {
				e.printStackTrace();
			}
		}
	}

	private int getSelectedCodigo() {
		return Integer.parseInt((String) tableListCursos.getModel().getValueAt(tableListCursos.getSelectedRow(), 0));
	}

	public TransactionWithQuery makeCursoChargeTransaction() {
		if(radioTurno1.isSelected()) {
			return (TransactionWithQuery) new CursoChangeTransaction(Integer.parseInt(fieldCodigo.getText().trim()),
					1,
					fieldNome.getText().trim());
		}
		else {
			return (TransactionWithQuery) new CursoChangeTransaction(Integer.parseInt(fieldCodigo.getText().trim()),
					2,
					fieldNome.getText().trim());
		}
	}

	public TransactionWithQuery makeCursoRemoveTransaction() {
		return (TransactionWithQuery) new CursoRemoveTransaction(Integer.parseInt(fieldCodigo.getText().trim()));
	}

	public void cleanScreen() {
		fieldCodigo.setText("");
		fieldNome.setText("");
		buttonGroup1.clearSelection();
	}
	
	private void informationMessage(String s) {
		message(s, "Ok!", JOptionPane.INFORMATION_MESSAGE);
	}

	private void message(String s, String title, int type) {
		JOptionPane.showMessageDialog(PainelEditarCurso.this, s, title, type);
	}

}

